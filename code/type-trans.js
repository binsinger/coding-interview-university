
/**
 * 
 * 
 */
// 一.值类型之间的数据类型转换:
// （1）数字和字符串使用+运算符:
// 数字和字符串如果使用+运算符进行操作，那么会将数字先转换为字符串，然后进行字符串连接操
// （2）布尔值参与的+运算符操作:
// 如果有布尔型参与，那么首先会将布尔值转换为对应的数字或者字符串，然后再进行相应的字符串连接或者算数运算。
// （3）Null和Undefined参与的+运算符操作
// 如果和数字进行计算，null会转化为0，undefined会转化成NaN
// （4）减法操作:
// 如果一个操作数为string、boolean、null、undefined，则在后台调用Number（）函数，将其转换成数值，再进行操作。
// 如果进行减法操作，那么两个操作数都会先被转换为数字，然后在进行算数运算:


// ==等性运算:
// undefined和null比较特殊，它们两个使用==运算符返回值是true。
// 其他值类型（Number、Boolean、Null、Undefined）进行比较的时候都会将运算数转换为数字
// JavaScript提供了isNaN来检测某个值是否为NaN，但是，这也不太精确的，因为，在调用isNaN函数之前，本身就存在了一个隐式转换的过程，它会把那些原本不是NaN的值转换成NaN的

// 两边的类型是否相同，相同的话就比较值的大小
// 如果其中一方是Objct，且另一方是String, Number, Symbol,会将Object转换成字符串，再进行比较


// 二 引用类型转值类型:
// 大多数对象隐式转换为值类型都是首先尝试调用valueOf()方法。但是Date对象是个例外，此对象的valueOf()和toString()方法都经过精心重写，默认是调用toString()方法，比如使用+运算符，如果在其他算数运算环境中，则会转而调用valueOf()方法。
